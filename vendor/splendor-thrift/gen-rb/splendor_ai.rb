#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'splendor_thrift_types'

module SplendorThrift
  module SplendorAi
    class Client
      include ::Thrift::Client

      def hi()
        send_hi()
        recv_hi()
      end

      def send_hi()
        send_message('hi', Hi_args)
      end

      def recv_hi()
        result = receive_message(Hi_result)
        return
      end

      def play(game)
        send_play(game)
        return recv_play()
      end

      def send_play(game)
        send_message('play', Play_args, :game => game)
      end

      def recv_play()
        result = receive_message(Play_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'play failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_hi(seqid, iprot, oprot)
        args = read_args(iprot, Hi_args)
        result = Hi_result.new()
        @handler.hi()
        write_result(result, oprot, 'hi', seqid)
      end

      def process_play(seqid, iprot, oprot)
        args = read_args(iprot, Play_args)
        result = Play_result.new()
        result.success = @handler.play(args.game)
        write_result(result, oprot, 'play', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Hi_args
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Hi_result
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Play_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      GAME = 1

      FIELDS = {
        GAME => {:type => ::Thrift::Types::STRUCT, :name => 'game', :class => ::SplendorThrift::Game}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Play_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::SplendorThrift::ActionResult}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
